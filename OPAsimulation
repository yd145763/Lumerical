# -*- coding: utf-8 -*-
"""
Created on Sat Dec 31 14:06:10 2022

@author: Lim Yudian
"""

import numpy as np
import matplotlib.pyplot as plt
import pandas as pd
import os
import imp

os.add_dll_directory("C:\\Program Files\\Lumerical\\v222\\api\\python\\lumapi.py")
lumapi = imp.load_source("lumapi","C:\\Program Files\\Lumerical\\v222\\api\\python\\lumapi.py")

#what phase difference you like to explore?
phs = [20, 30, 40, 50, 60]
for ph in phs:
    fdtd = lumapi.FDTD()    

    n=16 #how many emitters
    wavelength = 1.565e-6 #wavelength
    source_x = 2e-6 #width of the source in x-direction
    source_separation = 1e-6 #separation between sources
    source_y = 2e-6 #width of the source in y-direction
    distance = source_x + source_separation
    

    
    phase_difference = []
    i = 0
    while len(phase_difference) < n:
        phase_difference.append(i)
        i += ph
   
    x_coor = []
    j = 0
    while len(x_coor) <n:
        x_coor.append(j)
        j += distance

    for x, phase in zip(x_coor, phase_difference):
        fdtd.addgaussian()
        fdtd.set("injection axis","z")
        fdtd.set("direction","forward")
        fdtd.set("x",x)
        fdtd.set("x span",source_x)
        fdtd.set("y",0.0)
        fdtd.set("y span",source_y)
        fdtd.set("z", 0.0)
        fdtd.set("wavelength start", wavelength)
        fdtd.set("phase", phase)
        fdtd.set("waist radius w0",0.5e-6)
        fdtd.set("distance from waist",-5e-6)


    fdtd.addpower()
    fdtd.set("name", "Overall")
    fdtd.set("monitor type", "2D Y-normal")
    fdtd.set("x min", -5e-6)
    fdtd.set("x max", x_coor[n-1] + 5e-6)
    fdtd.set("y", 0.0)
    fdtd.set("z min", 0.0)
    fdtd.set("z max", 200e-6)
    
    fdtd.addfdtd()
    fdtd.set("x min", -5e-6)
    fdtd.set("x max", x_coor[n-1] + 5e-6)
    fdtd.set("y", 0.0)
    fdtd.set("y span", 3e-6)
    fdtd.set("z min", 0.0)
    fdtd.set("z max", 210e-6)

    fdtd.addpower()
    fdtd.set("name", "200um")
    fdtd.set("monitor type", 2)
    fdtd.set("x min", -5e-6)
    fdtd.set("x max", x_coor[n-1] + 5e-6)
    fdtd.set("y", 0.0)
    fdtd.set("z", 200e-6)


    fdtd.save("OPA.fsp")
    fdtd.run()

    E = fdtd.getresult("200um","E")
    x = E["x"].tolist()
    E_field = E["E"]
    Ex = E_field[:,0,0,0,0]
    Ey = E_field[:,0,0,0,1]
    Ez = E_field[:,0,0,0,2]
    Emag = (np.sqrt(np.abs(Ex)**2 + np.abs(Ey)**2 + np.abs(Ez)**2)).tolist()

    ax = plt.axes()
    ax.plot(x, Emag)
    plt.show()
    plt.close()
